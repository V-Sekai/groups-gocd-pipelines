{
  "env": { "GODOT_STATUS": "groups-4.0.0" },
  "jobs":
    {
      "default_stage_matrix":
        {
          "container": { "image": "rockylinux:8.5.20220308" },
          "runs-on": "ubuntu-20.04",
          "steps":
            [
              {
                "run": "yum install -y unzip epel-release dnf-plugins-core && yum config-manager -y --set-enabled powertools && curl https://download.mono-project.com/repo/centos8-stable.repo | tee /etc/yum.repos.d/mono-stable.repo && yum update -y",
              },
              {
                "run": "curl -L -o butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default && unzip butler.zip && rm butler.zip && butler -V && butler -V && cd && butler -V",
                "working-directory": "/usr/local/bin",
              },
              {
                "run": 'yum upgrade -y && yum group install -y "Development Tools" && yum group install -y "Additional Development" && yum install -y git-lfs automake autoconf libtool yasm wine mono-devel cmake python3-scons clang glibc-devel.i686 libgcc.i686 libstdc++.i686 mingw64-gcc-c++ mingw32-gcc mingw32-gcc-c++ python3-pip mingw64-winpthreads mingw32-winpthreads mingw64-winpthreads-static mingw32-winpthreads-static libstdc++-static mingw64-filesystem mingw32-filesystem bash libX11-devel libXcursor-devel libXrandr-devel libXinerama-devel libXi-devel mesa-libGL-devel alsa-lib-devel pulseaudio-libs-devel freetype-devel openssl-devel libudev-devel mesa-libGLU-devel libpng-devel xar-devel llvm-devel clang llvm-devel libxml2-devel libuuid-devel openssl-devel bash patch libstdc++-static make git bzip2 xz java-openjdk yasm xorg-x11-server-Xvfb pkgconfig mesa-dri-drivers java-1.8.0-openjdk-devel ncurses-compat-libs unzip which gcc gcc-c++ libatomic-static libatomic ccache ninja-build',
              },
              {
                "run": "alternatives --set ld /usr/bin/ld.gold && git lfs install && alternatives --set python /usr/bin/python3 && ln -s /usr/bin/scons-3 /usr/local/bin/scons",
              },
              {
                "run": "mkdir -p opt/llvm-mingw && curl -L https://github.com/mstorsjo/llvm-mingw/releases/download/20201020/llvm-mingw-20201020-ucrt-ubuntu-18.04.tar.xz | tar -Jxf - --strip 1 -C opt/llvm-mingw",
              },
              {
                "uses": "actions/checkout@v3",
                "with":
                  {
                    "path": "opt/emsdk",
                    "ref": "groups-4.x",
                    "repository": "emscripten-core/emsdks",
                  },
              },
              {
                "run": "opt/emsdk/emsdk install latest && opt/emsdk/emsdk activate latest && curl -L -o ispc.tgz 'https://github.com/ispc/ispc/releases/download/v1.15.0/ispc-v1.15.0-linux.tar.gz' && tar -zxf ispc.tgz ispc-v1.15.0-linux/bin/ispc && mv ispc-v1.15.0-linux/bin/ispc /usr/local/bin/ispc && rmdir -p ispc-v1.15.0-linux/bin\n# https://dl.google.com/android/repository/commandlinetools-linux-6514223_latest.zip",
              },
              {
                "run": "curl -LO https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip && unzip sdk-tools-linux-4333796.zip -d opt/android && rm sdk-tools-linux-4333796.zip && yes | opt/android/tools/bin/sdkmanager --licenses && opt/android/tools/bin/sdkmanager ndk-bundle 'platforms;android-23' 'build-tools;19.1.0' 'build-tools;28.0.3' 'platforms;android-28'",
              },
              {
                "run": "git config --global url.git@gitlab.com:.insteadOf https://gitlab.com/",
              },
              {
                "name": "Checkout Godot Engine repo",
                "uses": "actions/checkout@v3",
                "with":
                  {
                    "path": "g",
                    "ref": "groups-4.x",
                    "repository": "V-Sekai/godot.git",
                  },
              },
              {
                "name": "Checkout Godot Engine Custom Modules",
                "uses": "actions/checkout@v3",
                "with":
                  {
                    "path": "godot_custom_modules",
                    "ref": "groups-modules-4.x",
                    "repository": "V-Sekai/godot-modules-groups.git",
                  },
              },
              {
                "run": "sed -i \"/^status =/s/=.*/= \\\"$GODOT_STATUS.$GO_PIPELINE_COUNTER\\\"/\" version.py",
                "working-directory": "g",
              },
              {
                "run": "${{ matrix.platform_name.scons_env }} scons werror=no platform=${{ matrix.platform_name.scons_platform }} target=release_debug -j`nproc` use_lto=no deprecated=no ${{ matrix.platform_name.scons_arguments }} custom_modules=../godot_custom_modules",
                "working-directory": "g",
              },
              {
                "if": true,
                "run": "cp -p g/bin/' + ${{  matrix.platform_name.intermediate_godot_binary }} + ' g/bin/' + ${{ matrix.platform_name.editor_godot_binary }} ",
              },
            ],
          "strategy":
            {
              "matrix":
                {
                  "platform_name":
                    [
                      {
                        "editor_godot_binary": "godot.windows.opt.tools.64.exe",
                        "intermediate_godot_binary": "godot.windows.opt.tools.64.exe",
                        "name": "windows",
                        "scons_env": "PATH=/opt/llvm-mingw/bin:$PATH ",
                        "scons_platform": "windows",
                      },
                      {
                        "editor_godot_binary": "godot.linuxbsd.opt.tools.64.llvm",
                        "intermediate_godot_binary": "godot.linuxbsd.opt.tools.64.llvm",
                        "name": "linux",
                        "scons_env": "",
                        "scons_platform": "linuxbsd",
                      },
                      {
                        "editor_godot_binary": "godot.javascript.opt.debug.threads.zip",
                        "intermediate_godot_binary": "godot.javascript.opt.debug.threads.zip",
                        "name": "web",
                        "scons_env": "source /opt/emsdk/emsdk_env.sh && EM_CACHE=/tmp ",
                        "scons_platform": "javascript",
                      },
                    ],
                },
            },
        },
    },
  "on": ["push"],
}
