{
   "environment_variables": [
      {
         "name": "GODOT_STATUS",
         "value": "protongraph"
      }
   ],
   "group": "beta",
   "label_template": "protongraph.${groups_git_sandbox[:8]}.${godot-template-protongraph-editor_pipeline_dependency}.${COUNT}",
   "materials": [
      {
         "branch": "groups-3.x",
         "destination": "g",
         "name": "groups_git_sandbox",
         "type": "git",
         "url": "https://github.com/fire/protongraph.git"
      },
      {
         "ignore_for_scheduling": false,
         "name": "godot-template-protongraph-editor_pipeline_dependency",
         "pipeline": "godot-template-protongraph-editor",
         "stage": "templateZipStage",
         "type": "dependency"
      }
   ],
   "name": "production-protongraph-release-export",
   "stages": [
      {
         "clean_workspace": false,
         "fetch_materials": true,
         "jobs": [
            {
               "artifacts": [
                  {
                     "destination": "",
                     "source": "export_windows",
                     "type": "build"
                  }
               ],
               "name": "windowsJob",
               "resources": [
                  "linux",
                  "mingw5"
               ],
               "tasks": [
                  {
                     "artifact_origin": "gocd",
                     "destination": "",
                     "is_source_a_file": true,
                     "job": "defaultJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "godot.templates.tpz",
                     "stage": "templateZipStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "",
                     "is_source_a_file": true,
                     "job": "serverJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "godot_server.x11.opt.tools.64.llvm",
                     "stage": "defaultStage",
                     "type": "fetch"
                  },
                  {
                     "arguments": [
                        "-c",
                        "rm -rf templates && unzip \"godot.templates.tpz\" && mkdir pdbs && mv templates/*.pdb pdbs && export VERSION=\"`cat templates/version.txt`\" && export TEMPLATEDIR=\".local/share/godot/templates/$VERSION\" && export BASEDIR=\"`pwd`\" && rm -rf \"$TEMPLATEDIR\" && mkdir -p \"$TEMPLATEDIR\" && cd \"$TEMPLATEDIR\" && mv \"$BASEDIR\"/templates/* . && ln server_* \"$BASEDIR/templates/\""
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": ""
                  },
                  {
                     "arguments": [
                        "-c",
                        "(echo \"## AUTOGENERATED BY BUILD\"; echo \"\"; echo \"const BUILD_LABEL = \\\"$GO_PIPELINE_LABEL\\\"\"; echo \"const BUILD_DATE_STR = \\\"$(date --utc --iso=seconds)\\\"\"; echo \"const BUILD_UNIX_TIME = $(date +%s)\" ) > addons/vsk_version/build_constants.gd"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "rm -rf export_windows && mkdir export_windows && chmod +x godot_server.x11.opt.tools.64.llvm && HOME=\"`pwd`\" ./godot_server.x11.opt.tools.64.llvm --export \"Windows Desktop\" \"`pwd`\"/export_windows/protongraph_windows.exe --path g -v"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": ""
                  }
               ]
            },
            {
               "artifacts": [
                  {
                     "destination": "",
                     "source": "export_linux_x11",
                     "type": "build"
                  }
               ],
               "name": "linuxDesktopJob",
               "resources": [
                  "linux",
                  "mingw5"
               ],
               "tasks": [
                  {
                     "artifact_origin": "gocd",
                     "destination": "",
                     "is_source_a_file": true,
                     "job": "defaultJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "godot.templates.tpz",
                     "stage": "templateZipStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "",
                     "is_source_a_file": true,
                     "job": "serverJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "godot_server.x11.opt.tools.64.llvm",
                     "stage": "defaultStage",
                     "type": "fetch"
                  },
                  {
                     "arguments": [
                        "-c",
                        "rm -rf templates && unzip \"godot.templates.tpz\" && mkdir pdbs && mv templates/*.pdb pdbs && export VERSION=\"`cat templates/version.txt`\" && export TEMPLATEDIR=\".local/share/godot/templates/$VERSION\" && export BASEDIR=\"`pwd`\" && rm -rf \"$TEMPLATEDIR\" && mkdir -p \"$TEMPLATEDIR\" && cd \"$TEMPLATEDIR\" && mv \"$BASEDIR\"/templates/* . && ln server_* \"$BASEDIR/templates/\""
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": ""
                  },
                  {
                     "arguments": [
                        "-c",
                        "(echo \"## AUTOGENERATED BY BUILD\"; echo \"\"; echo \"const BUILD_LABEL = \\\"$GO_PIPELINE_LABEL\\\"\"; echo \"const BUILD_DATE_STR = \\\"$(date --utc --iso=seconds)\\\"\"; echo \"const BUILD_UNIX_TIME = $(date +%s)\" ) > addons/vsk_version/build_constants.gd"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "rm -rf export_linux_x11 && mkdir export_linux_x11 && chmod +x godot_server.x11.opt.tools.64.llvm && HOME=\"`pwd`\" ./godot_server.x11.opt.tools.64.llvm --export \"Linux/X11\" \"`pwd`\"/export_linux_x11/protograph_linux_x11 --path g -v"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": ""
                  }
               ]
            }
         ],
         "name": "exportStage"
      },
      {
         "clean_workspace": false,
         "jobs": [
            {
               "name": "windowsJob",
               "resources": [
                  "linux",
                  "mingw5"
               ],
               "tasks": [
                  {
                     "artifact_origin": "gocd",
                     "destination": "",
                     "is_source_a_file": false,
                     "job": "windowsJob",
                     "pipeline": "production-protongraph-release-export",
                     "source": "export_windows",
                     "stage": "exportStage",
                     "type": "fetch"
                  },
                  {
                     "arguments": [
                        "-c",
                        "butler push export_windows $ITCHIO_LOGIN:windows-master --userversion $GO_PIPELINE_LABEL-`date --iso=seconds --utc`"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": ""
                  }
               ]
            },
            {
               "name": "linuxDesktopJob",
               "resources": [
                  "linux",
                  "mingw5"
               ],
               "tasks": [
                  {
                     "artifact_origin": "gocd",
                     "destination": "",
                     "is_source_a_file": false,
                     "job": "linuxDesktopJob",
                     "pipeline": "production-protongraph-release-export",
                     "source": "export_linux_x11",
                     "stage": "exportStage",
                     "type": "fetch"
                  },
                  {
                     "arguments": [
                        "-c",
                        "butler push export_linux_x11 $ITCHIO_LOGIN:x11-master --userversion $GO_PIPELINE_LABEL-`date --iso=seconds --utc`"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": ""
                  }
               ]
            }
         ],
         "name": "uploadStage"
      }
   ]
}
