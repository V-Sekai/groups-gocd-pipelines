{
   "environment_variables": [
      {
         "name": "GODOT_STATUS",
         "value": "protongraph"
      }
   ],
   "godot_groups_export.gopipeline.json": {
      "environment_variables": [
         {
            "name": "GODOT_STATUS",
            "value": "protongraph"
         }
      ],
      "group": "beta",
      "label_template": "protongraph.${groups_git_sandbox[:8]}.${godot-template-protongraph-editor_pipeline_dependency}.${COUNT}",
      "materials": [
         {
            "branch": "groups-3.x",
            "destination": "g",
            "name": "groups_git_sandbox",
            "type": "git",
            "url": "https://github.com/fire/protongraph.git"
         },
         {
            "ignore_for_scheduling": false,
            "name": "godot-template-protongraph-editor_pipeline_dependency",
            "pipeline": "godot-template-protongraph-editor",
            "stage": "templateZipStage",
            "type": "dependency"
         }
      ],
      "name": "production-protongraph-release-export",
      "stages": [
         {
            "clean_workspace": false,
            "fetch_materials": true,
            "jobs": [
               {
                  "artifacts": [
                     {
                        "destination": "",
                        "source": "export_windows",
                        "type": "build"
                     }
                  ],
                  "name": "windowsJob",
                  "resources": [
                     "linux",
                     "mingw5"
                  ],
                  "tasks": [
                     {
                        "artifact_origin": "gocd",
                        "destination": "",
                        "is_source_a_file": true,
                        "job": "defaultJob",
                        "pipeline": "godot-template-protongraph-editor",
                        "source": "godot.templates.tpz",
                        "stage": "templateZipStage",
                        "type": "fetch"
                     },
                     {
                        "artifact_origin": "gocd",
                        "destination": "",
                        "is_source_a_file": true,
                        "job": "serverJob",
                        "pipeline": "godot-template-protongraph-editor",
                        "source": "godot_server.x11.opt.tools.64.llvm",
                        "stage": "defaultStage",
                        "type": "fetch"
                     },
                     {
                        "arguments": [
                           "-c",
                           "rm -rf templates && unzip \"godot.templates.tpz\" && mkdir pdbs && mv templates/*.pdb pdbs && export VERSION=\"`cat templates/version.txt`\" && export TEMPLATEDIR=\".local/share/godot/templates/$VERSION\" && export BASEDIR=\"`pwd`\" && rm -rf \"$TEMPLATEDIR\" && mkdir -p \"$TEMPLATEDIR\" && cd \"$TEMPLATEDIR\" && mv \"$BASEDIR\"/templates/* . && ln server_* \"$BASEDIR/templates/\""
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     },
                     {
                        "arguments": [
                           "-c",
                           "cp -p godot_speech/libGodotSpeech.dll g/addons/godot_speech/bin/"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     },
                     {
                        "arguments": [
                           "-c",
                           "cp -p godot_openvr/libgodot_openvr.dll godot_openvr/openvr_api.dll g/addons/godot-openvr/bin/win64/"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     },
                     {
                        "arguments": [
                           "-c",
                           "(echo \"## AUTOGENERATED BY BUILD\"; echo \"\"; echo \"const BUILD_LABEL = \\\"$GO_PIPELINE_LABEL\\\"\"; echo \"const BUILD_DATE_STR = \\\"$(date --utc --iso=seconds)\\\"\"; echo \"const BUILD_UNIX_TIME = $(date +%s)\" ) > addons/vsk_version/build_constants.gd"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": "g"
                     },
                     {
                        "arguments": [
                           "-c",
                           "rm -rf export_windows && mkdir export_windows && chmod +x godot_server.x11.opt.tools.64.llvm && HOME=\"`pwd`\" ./godot_server.x11.opt.tools.64.llvm --export \"Windows Desktop\" \"`pwd`\"/export_windows/v_sekai_windows.exe --path g -v"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     },
                     {
                        "arguments": [
                           "-c",
                           "cp -a g/assets/actions/openvr/actions export_windows/"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     },
                     {
                        "arguments": [
                           "-c",
                           "cp -p pdbs/*.pdb godot_speech/*.pdb godot_openvr/*.pdb export_windows/"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     }
                  ]
               },
               {
                  "artifacts": [
                     {
                        "destination": "",
                        "source": "export_linux_x11",
                        "type": "build"
                     }
                  ],
                  "name": "linuxDesktopJob",
                  "resources": [
                     "linux",
                     "mingw5"
                  ],
                  "tasks": [
                     {
                        "artifact_origin": "gocd",
                        "destination": "",
                        "is_source_a_file": true,
                        "job": "defaultJob",
                        "pipeline": "godot-template-protongraph-editor",
                        "source": "godot.templates.tpz",
                        "stage": "templateZipStage",
                        "type": "fetch"
                     },
                     {
                        "artifact_origin": "gocd",
                        "destination": "",
                        "is_source_a_file": true,
                        "job": "serverJob",
                        "pipeline": "godot-template-protongraph-editor",
                        "source": "godot_server.x11.opt.tools.64.llvm",
                        "stage": "defaultStage",
                        "type": "fetch"
                     },
                     {
                        "arguments": [
                           "-c",
                           "rm -rf templates && unzip \"godot.templates.tpz\" && mkdir pdbs && mv templates/*.pdb pdbs && export VERSION=\"`cat templates/version.txt`\" && export TEMPLATEDIR=\".local/share/godot/templates/$VERSION\" && export BASEDIR=\"`pwd`\" && rm -rf \"$TEMPLATEDIR\" && mkdir -p \"$TEMPLATEDIR\" && cd \"$TEMPLATEDIR\" && mv \"$BASEDIR\"/templates/* . && ln server_* \"$BASEDIR/templates/\""
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     },
                     {
                        "arguments": [
                           "-c",
                           "cp -p godot_speech/libGodotSpeech.so g/addons/godot_speech/bin/libGodotSpeech.so"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     },
                     {
                        "arguments": [
                           "-c",
                           "cp -p godot_openvr/libgodot_openvr.so godot_openvr/libopenvr_api.so g/addons/godot-openvr/bin/x11/"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     },
                     {
                        "arguments": [
                           "-c",
                           "(echo \"## AUTOGENERATED BY BUILD\"; echo \"\"; echo \"const BUILD_LABEL = \\\"$GO_PIPELINE_LABEL\\\"\"; echo \"const BUILD_DATE_STR = \\\"$(date --utc --iso=seconds)\\\"\"; echo \"const BUILD_UNIX_TIME = $(date +%s)\" ) > addons/vsk_version/build_constants.gd"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": "g"
                     },
                     {
                        "arguments": [
                           "-c",
                           "rm -rf export_linux_x11 && mkdir export_linux_x11 && chmod +x godot_server.x11.opt.tools.64.llvm && HOME=\"`pwd`\" ./godot_server.x11.opt.tools.64.llvm --export \"Linux/X11\" \"`pwd`\"/export_linux_x11/v_sekai_linux_x11 --path g -v"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     },
                     {
                        "arguments": [
                           "-c",
                           "cp -a g/assets/actions/openvr/actions export_linux_x11/"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     }
                  ]
               }
            ],
            "name": "exportStage"
         },
         {
            "clean_workspace": false,
            "jobs": [
               {
                  "name": "windowsJob",
                  "resources": [
                     "linux",
                     "mingw5"
                  ],
                  "tasks": [
                     {
                        "artifact_origin": "gocd",
                        "destination": "",
                        "is_source_a_file": false,
                        "job": "windowsJob",
                        "pipeline": "production-protongraph-release-export",
                        "source": "export_windows",
                        "stage": "exportStage",
                        "type": "fetch"
                     },
                     {
                        "arguments": [
                           "-c",
                           "butler push export_windows $ITCHIO_LOGIN:windows-master --userversion $GO_PIPELINE_LABEL-`date --iso=seconds --utc`"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     }
                  ]
               },
               {
                  "name": "linuxDesktopJob",
                  "resources": [
                     "linux",
                     "mingw5"
                  ],
                  "tasks": [
                     {
                        "artifact_origin": "gocd",
                        "destination": "",
                        "is_source_a_file": false,
                        "job": "linuxDesktopJob",
                        "pipeline": "production-protongraph-release-export",
                        "source": "export_linux_x11",
                        "stage": "exportStage",
                        "type": "fetch"
                     },
                     {
                        "arguments": [
                           "-c",
                           "butler push export_linux_x11 $ITCHIO_LOGIN:x11-master --userversion $GO_PIPELINE_LABEL-`date --iso=seconds --utc`"
                        ],
                        "command": "/bin/bash",
                        "type": "exec",
                        "working_directory": ""
                     }
                  ]
               }
            ],
            "name": "uploadStage"
         }
      ]
   },
   "group": "beta",
   "label_template": "protongraph.${godot_sandbox[:8]}.${COUNT}",
   "materials": [
      {
         "branch": "godot-3.4",
         "destination": "g",
         "name": "godot_sandbox",
         "type": "git",
         "url": "https://github.com/V-Sekai/godot.git"
      }
   ],
   "name": "godot-template-protongraph-editor",
   "stages": [
      {
         "clean_workspace": false,
         "jobs": [
            {
               "artifacts": [
                  {
                     "destination": "",
                     "source": "g/bin/godot.windows.opt.tools.64.exe",
                     "type": "build"
                  },
                  {
                     "destination": "",
                     "source": "g/bin/godot.windows.opt.tools.64.pdb",
                     "type": "build"
                  }
               ],
               "name": "windowsJob",
               "resources": [
                  "mingw5",
                  "linux"
               ],
               "tasks": [
                  {
                     "arguments": [
                        "-c",
                        "sed -i \"/^status =/s/=.*/= \\\"$GODOT_STATUS.$GO_PIPELINE_COUNTER\\\"/\" version.py"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "PATH=/opt/llvm-mingw/bin:$PATH scons werror=no platform=windows target=release_debug -j`nproc` use_lto=no deprecated=no use_mingw=yes use_llvm=yes use_lld=yes use_thinlto=yes LINKFLAGS=-Wl,-pdb= CCFLAGS='-g -gcodeview' debug_symbols=no"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  }
               ]
            },
            {
               "artifacts": [
                  {
                     "destination": "",
                     "source": "g/bin/godot.x11.opt.tools.64.llvm",
                     "type": "build"
                  }
               ],
               "name": "linuxJob",
               "resources": [
                  "mingw5",
                  "linux"
               ],
               "tasks": [
                  {
                     "arguments": [
                        "-c",
                        "sed -i \"/^status =/s/=.*/= \\\"$GODOT_STATUS.$GO_PIPELINE_COUNTER\\\"/\" version.py"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "scons werror=no platform=x11 target=release_debug -j`nproc` use_lto=no deprecated=no use_static_cpp=yes use_llvm=yes builtin_freetype=yes"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  }
               ]
            },
            {
               "artifacts": [
                  {
                     "destination": "",
                     "source": "g/bin/godot_server.x11.opt.tools.64.llvm",
                     "type": "build"
                  }
               ],
               "name": "serverJob",
               "resources": [
                  "mingw5",
                  "linux"
               ],
               "tasks": [
                  {
                     "arguments": [
                        "-c",
                        "sed -i \"/^status =/s/=.*/= \\\"$GODOT_STATUS.$GO_PIPELINE_COUNTER\\\"/\" version.py"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "scons werror=no platform=server target=release_debug -j`nproc` use_lto=no deprecated=no use_static_cpp=yes use_llvm=yes"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  }
               ]
            }
         ],
         "name": "defaultStage"
      },
      {
         "jobs": [
            {
               "artifacts": [
                  {
                     "destination": "",
                     "source": "g/bin/windows_64_debug.exe",
                     "type": "build"
                  },
                  {
                     "destination": "",
                     "source": "g/bin/windows_64_release.exe",
                     "type": "build"
                  },
                  {
                     "destination": "",
                     "source": "g/bin/version.txt",
                     "type": "build"
                  }
               ],
               "name": "windowsJob",
               "resources": [
                  "linux",
                  "mingw5"
               ],
               "tasks": [
                  {
                     "arguments": [
                        "-c",
                        "sed -i \"/^status =/s/=.*/= \\\"$GODOT_STATUS.$GO_PIPELINE_COUNTER\\\"/\" version.py"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "g/bin/",
                     "is_source_a_file": true,
                     "job": "windowsJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "godot.windows.opt.tools.64.exe",
                     "stage": "defaultStage",
                     "type": "fetch"
                  },
                  {
                     "arguments": [
                        "-c",
                        "cp bin/godot.windows.opt.tools.64.exe bin/windows_64_debug.exe && cp bin/godot.windows.opt.tools.64.exe bin/windows_64_release.exe && mingw-strip --strip-debug bin/windows_64_release.exe"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "eval `sed -e \"s/ = /=/\" version.py` && declare \"_tmp$patch=.$patch\" \"_tmp0=\" \"_tmp=_tmp$patch\" && echo $major.$minor${!_tmp}.$GODOT_STATUS.$GO_PIPELINE_COUNTER > bin/version.txt"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  }
               ]
            },
            {
               "artifacts": [
                  {
                     "destination": "",
                     "source": "g/bin/linux_x11_64_debug",
                     "type": "build"
                  },
                  {
                     "destination": "",
                     "source": "g/bin/linux_x11_64_release",
                     "type": "build"
                  },
                  {
                     "destination": "",
                     "source": "g/bin/version.txt",
                     "type": "build"
                  }
               ],
               "name": "linuxJob",
               "resources": [
                  "linux",
                  "mingw5"
               ],
               "tasks": [
                  {
                     "arguments": [
                        "-c",
                        "sed -i \"/^status =/s/=.*/= \\\"$GODOT_STATUS.$GO_PIPELINE_COUNTER\\\"/\" version.py"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "g/bin/",
                     "is_source_a_file": true,
                     "job": "linuxJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "godot.x11.opt.tools.64.llvm",
                     "stage": "defaultStage",
                     "type": "fetch"
                  },
                  {
                     "arguments": [
                        "-c",
                        "cp bin/godot.x11.opt.tools.64.llvm bin/linux_x11_64_debug && cp bin/godot.x11.opt.tools.64.llvm bin/linux_x11_64_release && strip --strip-debug bin/linux_x11_64_release"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "eval `sed -e \"s/ = /=/\" version.py` && declare \"_tmp$patch=.$patch\" \"_tmp0=\" \"_tmp=_tmp$patch\" && echo $major.$minor${!_tmp}.$GODOT_STATUS.$GO_PIPELINE_COUNTER > bin/version.txt"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  }
               ]
            },
            {
               "artifacts": [
                  {
                     "destination": "",
                     "source": "g/bin/server_64_debug",
                     "type": "build"
                  },
                  {
                     "destination": "",
                     "source": "g/bin/server_64_release",
                     "type": "build"
                  },
                  {
                     "destination": "",
                     "source": "g/bin/version.txt",
                     "type": "build"
                  }
               ],
               "name": "serverJob",
               "resources": [
                  "linux",
                  "mingw5"
               ],
               "tasks": [
                  {
                     "arguments": [
                        "-c",
                        "sed -i \"/^status =/s/=.*/= \\\"$GODOT_STATUS.$GO_PIPELINE_COUNTER\\\"/\" version.py"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "g/bin/",
                     "is_source_a_file": true,
                     "job": "serverJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "godot_server.x11.opt.tools.64.llvm",
                     "stage": "defaultStage",
                     "type": "fetch"
                  },
                  {
                     "arguments": [
                        "-c",
                        "cp bin/godot_server.x11.opt.tools.64.llvm bin/server_64_debug && cp bin/godot_server.x11.opt.tools.64.llvm bin/server_64_release && strip --strip-debug bin/server_64_release"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "eval `sed -e \"s/ = /=/\" version.py` && declare \"_tmp$patch=.$patch\" \"_tmp0=\" \"_tmp=_tmp$patch\" && echo $major.$minor${!_tmp}.$GODOT_STATUS.$GO_PIPELINE_COUNTER > bin/version.txt"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  }
               ]
            },
            {
               "artifacts": [
                  {
                     "destination": "",
                     "source": "g/bin/webassembly_debug.zip",
                     "type": "build"
                  },
                  {
                     "destination": "",
                     "source": "g/bin/webassembly_release.zip",
                     "type": "build"
                  },
                  {
                     "destination": "",
                     "source": "g/bin/version.txt",
                     "type": "build"
                  }
               ],
               "name": "webJob",
               "resources": [
                  "linux",
                  "mingw5"
               ],
               "tasks": [
                  {
                     "arguments": [
                        "-c",
                        "sed -i \"/^status =/s/=.*/= \\\"$GODOT_STATUS.$GO_PIPELINE_COUNTER\\\"/\" version.py"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "source /opt/emsdk/emsdk_env.sh && EM_CACHE=/tmp scons werror=no platform=javascript target=release_debug -j`nproc` use_lto=no deprecated=no use_llvm=yes builtin_freetype=yes"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "cp bin/godot.javascript.opt.debug.zip bin/webassembly_debug.zip && cp bin/godot.javascript.opt.debug.zip bin/webassembly_release.zip"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  },
                  {
                     "arguments": [
                        "-c",
                        "eval `sed -e \"s/ = /=/\" version.py` && declare \"_tmp$patch=.$patch\" \"_tmp0=\" \"_tmp=_tmp$patch\" && echo $major.$minor${!_tmp}.$GODOT_STATUS.$GO_PIPELINE_COUNTER > bin/version.txt"
                     ],
                     "command": "/bin/bash",
                     "type": "exec",
                     "working_directory": "g"
                  }
               ]
            }
         ],
         "name": "templateStage"
      },
      {
         "jobs": [
            {
               "artifacts": [
                  {
                     "destination": "",
                     "source": "godot.templates.tpz",
                     "type": "build"
                  }
               ],
               "name": "defaultJob",
               "resources": [
                  "linux",
                  "mingw5"
               ],
               "tasks": [
                  {
                     "arguments": [
                        "-c",
                        "rm -rf templates"
                     ],
                     "command": "/bin/bash",
                     "type": "exec"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "templates",
                     "is_source_a_file": true,
                     "job": "windowsJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "version.txt",
                     "stage": "templateStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "templates",
                     "is_source_a_file": true,
                     "job": "windowsJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "godot.windows.opt.tools.64.pdb",
                     "stage": "defaultStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "templates",
                     "is_source_a_file": true,
                     "job": "windowsJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "windows_64_debug.exe",
                     "stage": "templateStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "templates",
                     "is_source_a_file": true,
                     "job": "windowsJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "windows_64_release.exe",
                     "stage": "templateStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "templates",
                     "is_source_a_file": true,
                     "job": "linuxJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "linux_x11_64_debug",
                     "stage": "templateStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "templates",
                     "is_source_a_file": true,
                     "job": "linuxJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "linux_x11_64_release",
                     "stage": "templateStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "templates",
                     "is_source_a_file": true,
                     "job": "serverJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "server_64_debug",
                     "stage": "templateStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "templates",
                     "is_source_a_file": true,
                     "job": "serverJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "server_64_release",
                     "stage": "templateStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "templates",
                     "is_source_a_file": true,
                     "job": "webJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "webassembly_debug.zip",
                     "stage": "templateStage",
                     "type": "fetch"
                  },
                  {
                     "artifact_origin": "gocd",
                     "destination": "templates",
                     "is_source_a_file": true,
                     "job": "webJob",
                     "pipeline": "godot-template-protongraph-editor",
                     "source": "webassembly_release.zip",
                     "stage": "templateStage",
                     "type": "fetch"
                  },
                  {
                     "arguments": [
                        "-c",
                        "rm -rf godot.templates.tpz"
                     ],
                     "command": "/bin/bash",
                     "type": "exec"
                  },
                  {
                     "arguments": [
                        "-c",
                        "zip -9 godot.templates.tpz templates/*"
                     ],
                     "command": "/bin/bash",
                     "type": "exec"
                  }
               ]
            }
         ],
         "name": "templateZipStage"
      }
   ]
}
